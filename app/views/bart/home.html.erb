<!DOCTYPE html>
<html>
<style>
.button {
  background-color: #4CAF50; /* Green */
  border: none;
  color: white;
  padding: 10px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}
.button4 {border-radius: 12px;}
h1 {
    text-align: center;
	color : #00BFFF;	
	font-family: Arial, Helvetica, sans-serif;

}
h6 {
    text-align: center;
	color : #00BFFF;	
	font-family: Arial, Helvetica, sans-serif;
}


.topnav {
  overflow: hidden;
  background-color: #333;
}

.topnav a {
  float: left;
  color: #f2f2f2;
  text-align: center;
  padding: 41px 16px;
  text-decoration: none;
  font-size: 17px;
}


table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 15px;
}

select {
        width: 300px;
        margin: 10px;
		height: 40px;
    }
select:focus {
        min-width: 300px;
        width: auto;
    } 

	.footer {
   position: fixed;
   left: 0;
   bottom: 0;
   width: 100%;
   background-color: black;
   color: white;
   text-align:center;
   /*height: 10px;*/
}

.sidebar {
  width: 130px;
  position: fixed;
  z-index: 1;
  top: 20px;
  right: 10px;
  background: #eee;
  overflow-x: hidden;
  padding: 8px 0;
}
.main {
  margin-right: 140px; /* Same width as the sidebar + left position in px */
  padding: 0px 10px;
}

/* Always set the map height explicitly to define the size of the div
 * element that contains the map. */
#map {
  height: 100%;
}
/* Optional: Makes the sample page fill the window. */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
}
	
</style>
<body>

<div class="topnav">
 <h1>Welcome to Bay Area Rapid Transit</h1>

 </div>

<h3 align = "center">Select source staion and destination station to get upcoming departures</h3>
<div align = "center">
<select id="from" >
    <option>From</option>
</select>

<select id="to" >
    <option>To</option>
</select>


<button class="button button4" onclick="route()"> Get Schedule </button>
</div>

<table id="trip_details">
</table>


<div class="sidebar">
</div>

<!-- <div align = "center">Next train arrives in<span id="time"></span> minutes!</div> -->

<!--</div>-->
<div id="block1">
<table id="trip_details">
</table>

<div class="sidebar">
</div>

<br><br>

<div id ="timer_div"> </div>
</div>

<div id="map"></div>
	

<img src="app/assets/fb.png" alt="fb" height="15" width="15">

<div class="footer">
  <p>
			<h6>Designed by : Ganga Kalburgi</h6>
			<a href="https://www.facebook.com/ganga.kalburgi.9" target = "blank">
				<img src="/assets/fb.png" alt="fb" height="15" width="15">
			</a>
			<a href="https://www.linkedin.com/in/gangakalburgi" target = "blank">
			  <img src="linkedin.png" alt="linkedIn" height="15" width="15">
			</a>
			<a href="mailto:gangakalburgi18@gmail.com">
			<img src="gmail.png" alt="gmail" height="15" width="15">
			</a>
		
  </p>
</div>

</body>
</html>


<script>

    const timerIdArray = [];

    function loaders() {
        loadStationsList("from");
        loadStationsList("to");
    }

    function loadStationsList(type) {
        var array = <%= @stations.inspect.html_safe %>
        var json_arr = JSON.parse(array);
        var select = document.getElementById(type);
        for(var i = 0; i < json_arr.length; i++) {
            var opt = json_arr[i];
            var el = document.createElement("option");
            el.textContent = opt.name;
            el.value = opt.abbr;
            select.appendChild(el);
        }
    }

    window.onload = loaders;

    function setupRefresh() {
        setInterval("cleanupAndRoute();", 30000);
    }

    function clearAllIntervals() {
        // console.log("before Popping : " + timerIdArray) ;
        while(timerIdArray.length > 0) {
            clearInterval(timerIdArray.pop());
        }
        // console.log("after Popping : " + timerIdArray) ;
    }

    function cleanupAndRoute() {
        // console.log("in cleanupAndRoute alertTimerId : " + alertTimerId);
        document.getElementById("trip_details").innerHTML="";
        document.getElementById("timer_div").innerHTML="";
        route();
    }

    // button calls this
    function route() {
        const e = document.getElementById("from");
        const from = e.options[e.selectedIndex].value;
        const to_temp = document.getElementById("to");
        const to = to_temp.options[to_temp.selectedIndex].value;

        getLatLong(from , to);
        getRoutePlan(from, to);
    }


    // function refreshPage() {
    //     var from = localStorage.getItem("from");
    //     var to = localStorage.getItem("to");
    //
    //     setDropDownValue(from, "from");
    //     setDropDownValue(to, "to");
    //
    //     getRoutePlan(from, to);
    // }

    // https://stackoverflow.com/questions/10029276/how-to-change-dropdownlist-selected-value-in-javascript/10029429
    function setDropDownValue(val, id) {
        var ddl = document.getElementById(id);
        var opts = ddl.options.length;
        for (var i=0; i<opts; i++){
            if (ddl.options[i].value == val){
                ddl.options[i].selected = true;
                break;
            }
        }
    }

    function getRoutePlan(from, to) {
        // source : https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange
        const Http = new XMLHttpRequest();
        const url1 = `/bart/trips?source=${from}&dest=${to}`;
        Http.open("GET", url1);
        var res = "";
        clearAllIntervals();

        Http.onreadystatechange = (e) => {
            if(Http.readyState === XMLHttpRequest.DONE) {
                var status = Http.status;
                if (status === 0 || (200 >= status && status < 400)) {
                    // The request has been completed successfully
                    res = JSON.parse(Http.responseText);

                    loadHeading();

                    for(var i = 0; i < res.length; i++) {
                        const dep = res[i]['@origTimeMin'];
                        const arr = res[i]['@destTimeMin'];
                        const fare = `$${res[i]['fares']['fare'][0]['@amount']}`;
                        createTable(arr, dep, fare);
                    }
                }

                var time_in_hh_mm = res[0]['@origTimeMin'].split(' ')[0];
                var getDiffTime = get_Diff_Time(time_in_hh_mm);
                var secs = convert_to_sec(getDiffTime);
                startTimer(secs);
            }
        };
        Http.send();
    }

    function get_Diff_Time(time_in_hh_mm) {
        var hh = parseInt(time_in_hh_mm.split(':')[0]);
        var mm = parseInt(time_in_hh_mm.split(':')[1]);
        var currentTime = new Date();
        var curr_hours = currentTime.getHours() - 12;
        var curr_mins = currentTime.getMinutes();
        var current_diff_time = `${hh-curr_hours}:${mm-curr_mins}`;
        return current_diff_time;
    }

    function convert_to_sec(time_in_hh_mm) {
        var h = parseInt(time_in_hh_mm.split(':')[0]);
        var m = parseInt(time_in_hh_mm.split(':')[1]);
        var res =  h*60+m*60;
        return res;
    }

    function convert_time_to_24_hr (time12h) {
        const [time, modifier] = time12h.split(' ');

        let [hours, minutes] = time.split(':');

        if (hours === '12') {
            hours = '00';
        }

        if (modifier === 'PM') {
            hours = parseInt(hours, 10) + 12;
        }

        return `${hours}:${minutes}`;
    }

    let alertTimerId = 0;
    // console.log("in let alertTimerId : " + alertTimerId);

    // source : https://stackoverflow.com/questions/20618355/the-simplest-possible-javascript-countdown-timer
    function startTimer(duration) {
        clearAllIntervals();
        var display = document.getElementById("timer_div");
        display.innerHTML = "";
        document.getElementById("timer_div").innerHTML = "";
        var timer = duration, minutes, seconds;
        alertTimerId = setInterval(function () {
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            display.textContent = minutes + ":" + seconds;
            display.innerHTML = `Train arrives in ${minutes}:${seconds} minutes!`;

            if (--timer < 0) {
                timer = duration;
            }
        }, 1000);
        timerIdArray.push(alertTimerId);
        // console.log("in startTimer alertTimerId : " + alertTimerId);
        // console.log("in timerIdArray : " + timerIdArray);
        setupRefresh();
    }

    function loadHeading() {
        var table = document.getElementById("trip_details");
        table.innerHTML="";

        var row = table.insertRow(-1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        // Add some text to the new cells:
        cell1.innerHTML = "<b> Arrival </b>";
        cell2.innerHTML = "<b> Departure </b>";
        cell3.innerHTML = "<b> Fare </b>";
    }

    function createTable(arr, dep, fare) {
        // Create an empty <tr> element and add it to the 1st position of the table:
        var row = document.getElementById("trip_details").insertRow(-1);

        // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        // Add some text to the new cells:
        cell1.innerHTML = dep;
        cell2.innerHTML = arr;
        cell3.innerHTML = fare;
    }

    function getLatLong(from, to) {
        const Http = new XMLHttpRequest();
        const url = `/bart/latlongs_for_two_stations?source=${from}&dest=${to}`;
        // console.log(" url: " + url);
        Http.open("GET", url);
        Http.onreadystatechange = (e) => {
            if(Http.readyState === XMLHttpRequest.DONE) {
                var status = Http.status;
                if (status === 0 || (200 >= status && status < 400)) {
                    // The request has been completed successfully
                    var res = JSON.parse(Http.responseText);
                    var lat_src= res['lat_src'];
                    var long_src = res['long_src'];
                    var lat_dest = res['lat_dest'];
                    var long_dest = res['long_dest'];

                    // console.log(lat_src,long_src, lat_dest,long_dest);

                    // console.log("res in getLatLong : " + res);
                    initMap(lat_src, long_src, lat_dest, long_dest);
                }
            }
        };
        Http.send();
    }


    // function getSrcCord() {
    //     const e = document.getElementById("from");
    //     const from = e.options[e.selectedIndex].value;
    //     const to_temp = document.getElementById("to");
    //     const to = to_temp.options[to_temp.selectedIndex].value;
    //     var src_cord = getLatLong(from, to);
    // }

    function initMap(lat_src, long_src, lat_dest, long_dest) {


        var lat_src = parseFloat(lat_src);
        var long_src = parseFloat(long_src);
        var lat_dest = parseFloat(lat_dest);
        var long_dest = parseFloat(long_dest);

        console.log(" lat_src : " + lat_src);
        console.log(" long_src : " + long_src);
        console.log(" lat_dest : " + lat_dest);
        console.log(" long_dest : " + long_dest);

      var directionsRenderer = new google.maps.DirectionsRenderer;
      var directionsService = new google.maps.DirectionsService;
      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 14,
        center: {lat: lat_src, lng: long_src}
      });
      directionsRenderer.setMap(map);

      calculateAndDisplayRoute(directionsService, directionsRenderer, lat_src, long_src, lat_dest, long_dest);
    }

    function calculateAndDisplayRoute(directionsService, directionsRenderer, lat_src, long_src, lat_dest, long_dest) {
      var selectedMode = 'TRANSIT';
        var src_lat = lat_src;
        var src_long = long_src;

        var dest_lat = lat_dest;
        var dest_long = long_dest;
        console.log("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&");
        console.log(" src_lat : " + src_lat);
        console.log(" src_long : " + src_long);

        console.log(" dest_lat : " + dest_lat);
        console.log(" dest_long : " + dest_long);
        console.log("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&");


      directionsService.route({
        origin: {lat: src_lat, lng: src_long},
        destination: {lat: dest_lat, lng: dest_long},
        // Note that Javascript allows us to access the constant
        // using square brackets and a string value as its
        // "property."
        travelMode: google.maps.TravelMode[selectedMode]
      }, function(response, status) {
        if (status == 'OK') {
          directionsRenderer.setDirections(response);
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
    }
</script>
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBmhIaPvZf38mTQJ7lgyiBjAk6hUKkEucU">
</script>
